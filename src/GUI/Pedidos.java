/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Metodos.Deletes;
import Metodos.Selects;
import Metodos.Updates;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class Pedidos extends javax.swing.JPanel {

    //MIRAR TABULACION EN JAVA 
    Deletes d = new Deletes();

    Selects c = new Selects();

    Updates u = new Updates();

    public Pedidos() throws SQLException {
        initComponents();
        modelo();
        setListaClientes();
    }

    public void modelo() throws SQLException {
        DefaultTableModel dtm = new DefaultTableModel();
        dtm.addColumn("Referencia");
        dtm.addColumn("Cliente");
        dtm.addColumn("Fecha");
        dtm.addColumn("Total");
        dtm.addColumn("Estado");
        jTable1.setModel(dtm);
        ResultSet rs;
        rs = Main.conexion.consulta(c.getRellenarPedidos());

        while (rs.next()) {

            Object[] datos = new Object[5];//Crea un vector para almacenar los valores del ResultSet
            datos[0] = (rs.getInt(1));
            datos[1] = (rs.getString(2));
            datos[2] = (rs.getString(3));
            datos[3] = (rs.getDouble(4));
            datos[4] = (rs.getString(5));

            //a√±ado el modelo a la tabla
            dtm.addRow(datos);
        }
        rs.close();
    }

    //metodo para actualizar la lista de Clientes
    public void setListaClientes() throws SQLException {

        ResultSet rs;
        rs = Main.conexion.consulta(c.getNombresDeClientes());

        while (rs.next()) {
            jCbClientes.addItem(rs.getString(1));
        }
        rs.close();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jCbClientes = new javax.swing.JComboBox();

        setBackground(java.awt.Color.gray);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel1.setBackground(java.awt.Color.lightGray);

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/add.png"))); // NOI18N
        jButton1.setText("Nuevo Pedido");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(0, 0, 0));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/lupa_2.png"))); // NOI18N
        jButton3.setText("Buscar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 0, 0));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/refrescar_1.png"))); // NOI18N
        jButton2.setText("Refrescar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(0, 0, 0));
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/del_1.png"))); // NOI18N
        jButton4.setText("Eliminar Pedidos");
        jButton4.setToolTipText("Debe seleccionar una linea en la tabla");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel1.setText("Nombre:");

        jCbClientes.setToolTipText("Seleccionar un Nombre");
        jCbClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCbClientesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(13, 13, 13)
                .addComponent(jCbClientes, 0, 71, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addGap(5, 5, 5))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jCbClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2)
                    .addComponent(jButton1)
                    .addComponent(jButton4)
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            /*
             Cuando creamos el nuevo pedido, pediremos el id del cliente
             */
            AltaPedido ap = new AltaPedido(null, true);
            ap.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(Pedidos.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            //SELECT POR NOMBRE

            DefaultTableModel dtm = new DefaultTableModel();
            dtm.addColumn("Referencia");
            dtm.addColumn("Cliente");
            dtm.addColumn("Fecha");
            dtm.addColumn("Total");
            dtm.addColumn("Estado");
            jTable1.setModel(dtm);
            ResultSet rs;
            rs = Main.conexion.consulta(c.pedidosPorNombre(jCbClientes.getSelectedItem().toString()));

            while (rs.next()) {

                Object[] datos = new Object[5];//Crea un vector para almacenar los valores del ResultSet
                datos[0] = (rs.getInt(1));
                datos[1] = (rs.getString(2));
                datos[2] = (rs.getString(3));
                datos[3] = (rs.getDouble(4));
                datos[4] = (rs.getString(5));

                //a√±ado el modelo a la tabla
                dtm.addRow(datos);
            }
            rs.close();

        } catch (SQLException ex) {
            Logger.getLogger(Pedidos.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            modelo();
        } catch (SQLException ex) {
            Logger.getLogger(Pedidos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jCbClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCbClientesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCbClientesActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        //Eliminar seleccionando en la tabla
        if (jTable1.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(jButton1, "Debe seleccionar una fila");
        } else {
            int fila = JOptionPane.showConfirmDialog(jButton1, "Esta seguro que desea eliminar");
            if (JOptionPane.OK_OPTION == fila) {
                //Probar dato que se recoge;
                int posicion = jTable1.getSelectedRow();
                System.out.println(jTable1.getValueAt(posicion, 0));
                int id = Integer.parseInt(jTable1.getValueAt(posicion, 0).toString());
                try {


                    //obteniendo datos
                    ResultSet rs;
                    rs = Main.conexion.consulta(c.getProductoCantidadDePedido(id));
                    System.out.println("Comprobante 1");
                    while (rs.next()) {
                        Object[] datos = new Object[2];
                        //fkproducto
                        datos[0] = (rs.getInt(1));
                        //cantidad
                        datos[1] = (rs.getInt(2));

                        ResultSet rs2;
                        rs2 = Main.conexion.consulta(c.stockProductoPorId(Integer.valueOf(datos[0].toString())));
                        System.out.println("El stock es : "+rs2);
                        Object[] datos2 = new Object[1];
                        //stock para este producto
                        datos2[0] = rs2.getInt(1);
                        
                        int stock = Integer.valueOf(datos2[0].toString()) + Integer.valueOf(datos[1].toString());
                        
                        //Modifico los datos con el stock y el id del Producto
                        Main.conexion.update(u.setNuevoStock(stock,Integer.valueOf(datos[0].toString())));
                    }

                    Main.conexion.update(d.deleteLineaPedidos(id));
                    //Refrescamos
                    modelo();
                } catch (SQLException ex) {
                    Logger.getLogger(Pedidos.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }


    }//GEN-LAST:event_jButton4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox jCbClientes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
